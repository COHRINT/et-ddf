<launch>
    <arg name="my_name" default="bluerov2_4" />
    <arg name="blue_team_names" default="[]" />
    <arg name="landmark_file" default="$(find etddf)/config/landmarks_flight.yaml" />

    <!-- not required, list of lists, index of outer 
    list corresponds to index in blue_team_names -->
    <arg name="blue_team_positions_enu" default="[]" /> 

    <arg name="red_team_names" default="[]" />
    <arg name="config_file" default="$(find etddf)/config/etddf_sonar.yaml" />
    <arg name="starting_position_enu" default="[1.22,0,0]" /> <!-- [x,y,z] -->
    
    <node name="etddf" pkg="etddf" type="etddf_node.py" output="screen">
        <param name="my_name" value="$(arg my_name)" />
        <rosparam param="blue_team_positions" subst_value="True">$(arg blue_team_positions_enu)</rosparam> 
        <rosparam param="blue_team_names" subst_value="True">$(arg blue_team_names)</rosparam> 
        <rosparam param="red_team_names" subst_value="True">$(arg red_team_names)</rosparam> 
        <rosparam param="starting_position" subst_value="True">$(arg starting_position_enu)</rosparam> 
        <rosparam command="load" file="$(arg config_file)" />        
        <rosparam command="load" file="$(find etddf)/config/measurements.yaml" />
        <rosparam command="load" file="$(arg landmark_file)" />
    </node>

    <node name="sonar_association" pkg="etddf" type="sonar_association.py" output="screen">
        <rosparam command="load" file="$(arg landmark_file)" />
    </node>

</launch>
